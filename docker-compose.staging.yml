version: '3.8'

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: products_postgres_staging
    env_file:
      - config.staging.env
    environment:
      POSTGRES_DB: ${DB_NAME:-products_db_staging}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-staging_password}
    ports:
      - "5433:5432"  # Другой порт для staging
    volumes:
      - postgres_data_staging:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - products_network_staging
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d products_db_staging"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # Redis для кэширования
  redis:
    image: redis:7-alpine
    container_name: products_redis_staging
    env_file:
      - config.staging.env
    ports:
      - "6380:6379"  # Другой порт для staging
    volumes:
      - redis_data_staging:/data
    networks:
      - products_network_staging
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-staging_redis_password}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-staging_redis_password}
    restart: unless-stopped

  # API приложение
  api:
    build: .
    container_name: products_api_staging
    ports:
      - "8081:8080"  # Другой порт для staging
    env_file:
      - config.staging.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - products_network_staging
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data_staging:
  redis_data_staging:

networks:
  products_network_staging:
    driver: bridge 