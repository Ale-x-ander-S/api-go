#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ —Ç–æ–ª—å–∫–æ Redis –±–µ–∑ healthcheck
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./start-redis-only.sh [staging|prod] [server_ip] [user]

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() { echo -e "${BLUE}[INFO]${NC} $1"; }
log_success() { echo -e "${GREEN}[SUCCESS]${NC} $1"; }
log_warning() { echo -e "${YELLOW}[WARNING]${NC} $1"; }
log_error() { echo -e "${RED}[ERROR]${NC} $1"; }

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ $# -lt 2 ]; then
    log_error "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [staging|prod] [server_ip] [user]"
    echo "–ü—Ä–∏–º–µ—Ä: $0 prod 45.12.229.112 root"
    exit 1
fi

ENVIRONMENT=$1
SERVER_IP=$2
REMOTE_USER=${3:-root}
REMOTE_DIR="/opt/api-go"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
case $ENVIRONMENT in
    staging)
        DOCKER_COMPOSE_FILE="docker-compose.staging.yml"
        CONFIG_FILE="config.staging.env"
        ;;
    prod|production)
        DOCKER_COMPOSE_FILE="docker-compose.prod.yml"
        CONFIG_FILE="config.prod.env"
        ;;
    *)
        log_error "–ù–µ–≤–µ—Ä–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ: $ENVIRONMENT"
        echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: staging, prod"
        exit 1
        ;;
esac

log_info "üöÄ –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ Redis –±–µ–∑ healthcheck"
log_info "–û–∫—Ä—É–∂–µ–Ω–∏–µ: $ENVIRONMENT"
log_info "–°–µ—Ä–≤–µ—Ä: $SERVER_IP"
log_info "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $REMOTE_USER"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è..."
if ! ssh -o ConnectTimeout=10 -o BatchMode=yes "$REMOTE_USER@$SERVER_IP" exit 2>/dev/null; then
    log_error "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É $SERVER_IP"
    exit 1
fi
log_success "SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Redis
log_info "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Redis..."
ssh "$REMOTE_USER@$SERVER_IP" "
    cd $REMOTE_DIR 2>/dev/null || exit 0
    docker-compose -f $DOCKER_COMPOSE_FILE stop redis 2>/dev/null || true
    docker-compose -f $DOCKER_COMPOSE_FILE rm -f redis 2>/dev/null || true
"

# –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ docker-compose —Ñ–∞–π–ª–∞ –±–µ–∑ healthcheck
log_info "üìù –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Redis..."
ssh "$REMOTE_USER@$SERVER_IP" "
    cd $REMOTE_DIR 2>/dev/null || exit 0
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –±–µ–∑ healthcheck
    cat > redis-only.yml << 'EOF'
version: '3.8'
services:
  redis:
    image: redis:7-alpine
    container_name: products_redis_prod
    env_file:
      - config.prod.env
    ports:
      - '6381:6379'
    volumes:
      - redis_data_prod:/data
    command: redis-server --appendonly yes --requirepass \${REDIS_PASSWORD:-}
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

volumes:
  redis_data_prod:
EOF
"

# –ó–∞–ø—É—Å–∫ Redis –±–µ–∑ healthcheck
log_info "üöÄ –ó–∞–ø—É—Å–∫ Redis –±–µ–∑ healthcheck..."
ssh "$REMOTE_USER@$SERVER_IP" "
    cd $REMOTE_DIR 2>/dev/null || exit 0
    docker-compose -f redis-only.yml up -d redis
"

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
log_info "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Redis..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
log_info "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Redis..."
ssh "$REMOTE_USER@$SERVER_IP" "
    cd $REMOTE_DIR 2>/dev/null || exit 0
    
    echo '=== –°—Ç–∞—Ç—É—Å Redis ==='
    docker-compose -f redis-only.yml ps redis
    
    echo ''
    echo '=== –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis ==='
    docker exec \$(docker-compose -f redis-only.yml ps -q redis) redis-cli -a \$(grep REDIS_PASSWORD $CONFIG_FILE | cut -d'=' -f2) ping 2>/dev/null || echo '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis –Ω–µ —É–¥–∞–ª–æ—Å—å'
    
    echo ''
    echo '=== –õ–æ–≥–∏ Redis ==='
    docker-compose -f redis-only.yml logs redis
"

# –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π docker-compose
log_info "üîÑ –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ docker-compose..."
ssh "$REMOTE_USER@$SERVER_IP" "
    cd $REMOTE_DIR 2>/dev/null || exit 0
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π Redis
    docker-compose -f redis-only.yml down
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π docker-compose
    docker-compose -f $DOCKER_COMPOSE_FILE up -d
"

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
log_info "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 60

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
log_info "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
ssh "$REMOTE_USER@$SERVER_IP" "
    cd $REMOTE_DIR 2>/dev/null || exit 0
    
    echo '=== –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ ==='
    docker-compose -f $DOCKER_COMPOSE_FILE ps
    
    echo ''
    echo '=== Health checks ==='
    echo 'PostgreSQL:'
    docker inspect \$(docker-compose -f $DOCKER_COMPOSE_FILE ps -q postgres) | grep -A 5 Health || echo 'Health check –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'
    echo ''
    echo 'Redis:'
    docker inspect \$(docker-compose -f $DOCKER_COMPOSE_FILE ps -q redis) | grep -A 5 Health || echo 'Health check –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'
"

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
log_info "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
ssh "$REMOTE_USER@$SERVER_IP" "
    cd $REMOTE_DIR 2>/dev/null || exit 0
    rm -f redis-only.yml
"

log_success "üéâ Redis –∑–∞–ø—É—â–µ–Ω –∏ –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç!"
echo ""

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏
log_info "–ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤? (y/n)"
read -r response
if [[ "$response" =~ ^[Yy]$ ]]; then
    ssh "$REMOTE_USER@$SERVER_IP" "cd $REMOTE_DIR && docker-compose -f $DOCKER_COMPOSE_FILE logs -f"
fi 