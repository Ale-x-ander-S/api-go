#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ –∂–∏–∑–Ω–∏ JWT —Ç–æ–∫–µ–Ω–∞

set -e

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –∂–∏–∑–Ω–∏ JWT —Ç–æ–∫–µ–Ω–∞"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–µ—Ä–≤–µ—Ä
if ! curl -s http://localhost:8080/ > /dev/null; then
    echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: go run main.go"
    exit 1
fi

echo "üìù –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:"
read -p "Username: " username
read -s -p "Password: " password
echo ""

echo "üîê –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞..."
response=$(curl -s -X POST http://localhost:8080/api/v1/auth/login \
    -H "Content-Type: application/json" \
    -d "{\"username\":\"$username\",\"password\":\"$password\"}")

token=$(echo $response | jq -r '.token')
if [ "$token" = "null" ] || [ "$token" = "" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: $(echo $response | jq -r '.error')"
    exit 1
fi

echo "‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω!"
echo ""

# –î–µ–∫–æ–¥–∏—Ä—É–µ–º JWT —Ç–æ–∫–µ–Ω (–±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∏)
echo "üîç –ê–Ω–∞–ª–∏–∑ JWT —Ç–æ–∫–µ–Ω–∞:"
echo ""

# –†–∞–∑–±–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω –Ω–∞ —á–∞—Å—Ç–∏
IFS='.' read -ra TOKEN_PARTS <<< "$token"

if [ ${#TOKEN_PARTS[@]} -eq 3 ]; then
    # –î–µ–∫–æ–¥–∏—Ä—É–µ–º payload (–≤—Ç–æ—Ä–∞—è —á–∞—Å—Ç—å)
    payload="${TOKEN_PARTS[1]}"
    
    # –î–æ–±–∞–≤–ª—è–µ–º padding –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    padding=$((4 - ${#payload} % 4))
    if [ $padding -ne 4 ]; then
        payload="${payload}$(printf '=%.0s' $(seq 1 $padding))"
    fi
    
    # –î–µ–∫–æ–¥–∏—Ä—É–µ–º base64
    decoded_payload=$(echo "$payload" | base64 -d 2>/dev/null || echo "$payload" | base64 -d 2>/dev/null)
    
    echo "üìã Payload —Ç–æ–∫–µ–Ω–∞:"
    echo "$decoded_payload" | jq '.' 2>/dev/null || echo "$decoded_payload"
    echo ""
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è
    exp=$(echo "$decoded_payload" | jq -r '.exp' 2>/dev/null)
    iat=$(echo "$decoded_payload" | jq -r '.iat' 2>/dev/null)
    
    if [ "$exp" != "null" ] && [ "$exp" != "" ]; then
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º Unix timestamp –≤ —á–∏—Ç–∞–µ–º—É—é –¥–∞—Ç—É
        expiry_date=$(date -r "$exp" "+%Y-%m-%d %H:%M:%S")
        issued_date=$(date -r "$iat" "+%Y-%m-%d %H:%M:%S")
        
        echo "‚è∞ –í—Ä–µ–º—è –∂–∏–∑–Ω–∏ —Ç–æ–∫–µ–Ω–∞:"
        echo "   –í—ã–¥–∞–Ω: $issued_date"
        echo "   –ò—Å—Ç–µ–∫–∞–µ—Ç: $expiry_date"
        
        # –í—ã—á–∏—Å–ª—è–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è
        current_time=$(date +%s)
        remaining_seconds=$((exp - current_time))
        
        if [ $remaining_seconds -gt 0 ]; then
            remaining_hours=$((remaining_seconds / 3600))
            remaining_minutes=$(((remaining_seconds % 3600) / 60))
            echo "   –û—Å—Ç–∞–ª–æ—Å—å: ${remaining_hours}—á ${remaining_minutes}–º"
        else
            echo "   ‚ùå –¢–æ–∫–µ–Ω –∏—Å—Ç–µ–∫!"
        fi
    else
        echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –≤—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è"
    fi
else
    echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JWT —Ç–æ–∫–µ–Ω–∞"
fi

echo ""
echo "üîß –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ JWT:"
echo "   JWT_EXPIRY_HOURS: ${JWT_EXPIRY_HOURS:-24} —á–∞—Å–æ–≤"
echo "   JWT_REFRESH_EXPIRY_DAYS: ${JWT_REFRESH_EXPIRY_DAYS:-7} –¥–Ω–µ–π"
echo ""
echo "üí° –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∂–∏–∑–Ω–∏ —Ç–æ–∫–µ–Ω–∞ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ config.env" 