.PHONY: help build run test clean swagger deps

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
BINARY_NAME=api-go
MAIN_FILE=main.go

# –ü–æ–º–æ—â—å
help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
deps: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Go
	go mod download
	go mod tidy

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è Swagger (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π)
swagger-auto: ## –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å Swagger —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
	@echo "üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
	@if command -v swag &> /dev/null; then \
		swag init -g $(MAIN_FILE) && echo "‚úÖ Swagger –æ–±–Ω–æ–≤–ª–µ–Ω"; \
	else \
		echo "‚ö†Ô∏è  swag –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –≤ GOPATH..."; \
		GOPATH=$${GOPATH:-$$HOME/go}; \
		if [ -f "$$GOPATH/bin/swag" ]; then \
			$$GOPATH/bin/swag init -g $(MAIN_FILE) && echo "‚úÖ Swagger –æ–±–Ω–æ–≤–ª–µ–Ω"; \
		else \
			echo "‚ùå swag –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: make tools"; \
		fi; \
	fi

# –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
build: ## –°–æ–±—Ä–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
	go build -o $(BINARY_NAME) $(MAIN_FILE)

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
	@echo "üîå –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–∞ 8080..."
	@if lsof -ti:8080 > /dev/null 2>&1; then \
		echo "–ü–æ—Ä—Ç 8080 –∑–∞–Ω—è—Ç, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å..."; \
		lsof -ti:8080 | xargs kill -9 2>/dev/null || true; \
		echo "–ü–æ—Ä—Ç 8080 –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω"; \
		sleep 1; \
	else \
		echo "–ü–æ—Ä—Ç 8080 —Å–≤–æ–±–æ–¥–µ–Ω"; \
	fi
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
	go run $(MAIN_FILE)

# –ó–∞–ø—É—Å–∫ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π Swagger
run-auto: swagger-auto run ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º Swagger

# –ó–∞–ø—É—Å–∫ —Å –ø–µ—Ä–µ—Å–±–æ—Ä–∫–æ–π (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å –∞–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–æ–π
	@echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ air –¥–ª—è –∞–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏..."
	@if ! command -v air &> /dev/null; then \
		go install github.com/cosmtrek/air@latest; \
	fi
	air

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	go test -v ./...

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞
lint: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –ª–∏–Ω—Ç–µ—Ä–æ–º
	@if ! command -v golangci-lint &> /dev/null; then \
		echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ golangci-lint..."; \
		go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest; \
	fi
	golangci-lint run

# –û—á–∏—Å—Ç–∫–∞
clean: ## –û—á–∏—Å—Ç–∏—Ç—å —Å–æ–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
	go clean
	rm -f $(BINARY_NAME)
	rm -rf docs/

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
tools: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	go install github.com/swaggo/swag/cmd/swag@latest
	go install github.com/cosmtrek/air@latest
	@if ! command -v golangci-lint &> /dev/null; then \
		go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest; \
	fi

# Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
swagger: ## –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
	@echo "üìö –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
	@if command -v ~/go/bin/swag &> /dev/null; then \
		~/go/bin/swag init -g main.go; \
		echo "‚úÖ Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞"; \
	elif command -v swag &> /dev/null; then \
		swag init -g main.go; \
		echo "‚úÖ Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞"; \
	else \
		echo "‚ö†Ô∏è  swag –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: go install github.com/swaggo/swag/cmd/swag@latest"; \
		exit 1; \
	fi

# –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
setup: tools deps swagger ## –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –∑–∞–ø—É—Å–∫—É
check: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –∑–∞–ø—É—Å–∫—É
	@echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	@go mod verify
	@echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞..."
	@go build -o /dev/null $(MAIN_FILE)
	@echo "–í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"

# –ó–∞–ø—É—Å–∫ —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
start: check run ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏

# –ó–∞–ø—É—Å–∫ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º Swagger
start-auto: check swagger-auto run ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º Swagger

# Docker –∫–æ–º–∞–Ω–¥—ã
docker-build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑
	docker build -t $(BINARY_NAME) .

docker-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ Docker
	docker run -p 8080:8080 --env-file config.env $(BINARY_NAME)

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
db-create: ## –°–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (—Ç—Ä–µ–±—É–µ—Ç psql)
	@echo "–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö products_db..."
	@psql -U postgres -c "CREATE DATABASE products_db;" || echo "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"

db-drop: ## –£–¥–∞–ª–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (—Ç—Ä–µ–±—É–µ—Ç psql)
	@echo "–£–¥–∞–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö products_db..."
	@psql -U postgres -c "DROP DATABASE IF EXISTS products_db;"

db-migrate: ## –ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é –ª–æ–∫–∞–ª—å–Ω–æ
	@echo "üóÑÔ∏è  –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –ª–æ–∫–∞–ª—å–Ω–æ..."
	@echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: make db-migrate MIGRATION=006_replace_weight_dimensions_with_color_size"
	@if [ -z "$(MIGRATION)" ]; then \
		echo "‚ùå –£–∫–∞–∂–∏—Ç–µ MIGRATION"; \
		echo "–ü—Ä–∏–º–µ—Ä: make db-migrate MIGRATION=006_replace_weight_dimensions_with_color_size"; \
		exit 1; \
	fi
	@if [ ! -f "migrations/$(MIGRATION).sql" ]; then \
		echo "‚ùå –§–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: migrations/$(MIGRATION).sql"; \
		exit 1; \
	fi
	@echo "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ $(MIGRATION)..."
	@psql -U postgres -d products_db -f migrations/$(MIGRATION).sql && echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞" || echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏"

# Redis –∫–æ–º–∞–Ω–¥—ã
redis-start: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å Redis –ª–æ–∫–∞–ª—å–Ω–æ
	@echo "–ó–∞–ø—É—Å–∫ Redis..."
	docker run -d --name redis-local -p 6379:6379 redis:7-alpine

redis-stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Redis –ª–æ–∫–∞–ª—å–Ω–æ
	@echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ Redis..."
	docker stop redis-local || true
	docker rm redis-local || true

redis-cli: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Redis CLI
	@echo "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis CLI..."
	docker exec -it redis-local redis-cli

# –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
deploy-local: ## –õ–æ–∫–∞–ª—å–Ω—ã–π –¥–µ–ø–ª–æ–π
	@echo "üè† –õ–æ–∫–∞–ª—å–Ω—ã–π –¥–µ–ø–ª–æ–π..."
	@docker-compose up -d

# –î–µ–ø–ª–æ–π –Ω–∞ –æ–±–ª–∞—á–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
full-deploy: ## –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π –Ω–∞ –æ–±–ª–∞—á–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
	@echo "üöÄ –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π –Ω–∞ –æ–±–ª–∞—á–Ω—ã–π —Å–µ—Ä–≤–µ—Ä..."
	@echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: make full-deploy ENV=prod SERVER=YOUR_IP USER=root"
	@if [ -z "$(ENV)" ] || [ -z "$(SERVER)" ]; then \
		echo "‚ùå –£–∫–∞–∂–∏—Ç–µ ENV –∏ SERVER"; \
		echo "–ü—Ä–∏–º–µ—Ä: make full-deploy ENV=prod SERVER=45.12.229.112 USER=root"; \
		exit 1; \
	fi
	@./scripts/full-deploy.sh $(ENV) $(SERVER) $(USER)

# –ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –∫–æ–¥–∞
deploy-code-only: swagger ## –ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –∫–æ–¥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
	@echo "‚ö° –ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –∫–æ–¥–∞..."
	@echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: make deploy-code-only ENV=prod SERVER=YOUR_IP USER=root"
	@if [ -z "$(ENV)" ] || [ -z "$(SERVER)" ]; then \
		echo "‚ùå –£–∫–∞–∂–∏—Ç–µ ENV –∏ SERVER"; \
		echo "–ü—Ä–∏–º–µ—Ä: make deploy-code-only ENV=prod SERVER=45.12.229.112 USER=root"; \
		exit 1; \
	fi
	@./scripts/deploy-code-only.sh $(ENV) $(SERVER) $(USER)

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
apply-migration: ## –ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
	@echo "üóÑÔ∏è  –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
	@echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: make apply-migration ENV=prod SERVER=YOUR_IP USER=root MIGRATION=006_replace_weight_dimensions_with_color_size"
	@if [ -z "$(ENV)" ] || [ -z "$(SERVER)" ] || [ -z "$(MIGRATION)" ]; then \
		echo "‚ùå –£–∫–∞–∂–∏—Ç–µ ENV, SERVER –∏ MIGRATION"; \
		echo "–ü—Ä–∏–º–µ—Ä: make apply-migration ENV=prod SERVER=45.12.229.112 USER=root MIGRATION=006_replace_weight_dimensions_with_color_size"; \
		exit 1; \
	fi
	@./scripts/apply-migration.sh $(ENV) $(SERVER) $(USER) $(MIGRATION)

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –º–∏–≥—Ä–∞—Ü–∏–π –ø–æ –ø–æ—Ä—è–¥–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
apply-all-migrations: ## –ü—Ä–∏–º–µ–Ω–∏—Ç—å –≤—Å–µ –º–∏–≥—Ä–∞—Ü–∏–π –ø–æ –ø–æ—Ä—è–¥–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
	@echo "üóÑÔ∏è  –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –º–∏–≥—Ä–∞—Ü–∏–π –ø–æ –ø–æ—Ä—è–¥–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
	@echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: make apply-all-migrations ENV=prod SERVER=YOUR_IP USER=root"
	@if [ -z "$(ENV)" ] || [ -z "$(SERVER)" ]; then \
		echo "‚ùå –£–∫–∞–∂–∏—Ç–µ ENV –∏ SERVER"; \
		echo "–ü—Ä–∏–º–µ—Ä: make apply-all-migrations ENV=prod SERVER=45.12.229.112 USER=root"; \
		exit 1; \
	fi
	@echo "üöÄ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –≤ –ø–æ—Ä—è–¥–∫–µ:"
	@echo "   001_initial_schema.sql"
	@echo "   002_update_existing_schema.sql"
	@echo "   003_update_users_table.sql"
	@echo "   004_example_add_user_phone.sql"
	@echo "   005_fix_sku_constraint.sql"
	@echo "   006_replace_weight_dimensions_with_color_size.sql"
	@echo "   007_add_stock_type_to_products.sql"
	@echo ""
	@./scripts/apply-migration.sh $(ENV) $(SERVER) $(USER) 001_initial_schema && \
	./scripts/apply-migration.sh $(ENV) $(SERVER) $(USER) 002_update_existing_schema && \
	./scripts/apply-migration.sh $(ENV) $(SERVER) $(USER) 003_update_users_table && \
	./scripts/apply-migration.sh $(ENV) $(SERVER) $(USER) 004_example_add_user_phone && \
	./scripts/apply-migration.sh $(ENV) $(SERVER) $(USER) 005_fix_sku_constraint && \
	./scripts/apply-migration.sh $(ENV) $(SERVER) $(USER) 006_replace_weight_dimensions_with_color_size && \
	./scripts/apply-migration.sh $(ENV) $(SERVER) $(USER) 007_add_stock_type_to_products && \
	echo "‚úÖ –í—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!"

# –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ minio.go —Å —Å–µ—Ä–≤–µ—Ä–∞
remove-minio: ## –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª minio.go —Å —Å–µ—Ä–≤–µ—Ä–∞
	@echo "üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ minio.go —Å —Å–µ—Ä–≤–µ—Ä–∞..."
	@echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: make remove-minio ENV=prod SERVER=YOUR_IP USER=root"
	@if [ -z "$(ENV)" ] || [ -z "$(SERVER)" ]; then \
		echo "‚ùå –£–∫–∞–∂–∏—Ç–µ ENV –∏ SERVER"; \
		echo "–ü—Ä–∏–º–µ—Ä: make remove-minio ENV=prod SERVER=45.12.229.112 USER=root"; \
		exit 1; \
	fi
	@ssh "$(USER)@$(SERVER)" "rm -f /root/api-go/database/minio.go && echo '‚úÖ –§–∞–π–ª minio.go —É–¥–∞–ª–µ–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞'"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
check-config: ## –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
	@./scripts/check-config.sh

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API
test-api: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API
	@echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API..."
	@./test_api.sh

# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π
demo: ## –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞
	@echo "üé¨ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞..."
	@echo "üì± –û—Ç–∫—Ä–æ–π—Ç–µ Swagger UI: http://localhost:8080/swagger/index.html"
	@echo "üîë –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∞ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞"
	@echo "üõí –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∫–æ—Ä–∑–∏–Ω—É –∏ –∑–∞–∫–∞–∑—ã"
	@echo "üìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫—ç—à–∞" 